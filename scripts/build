#!/usr/bin/env ruby
require 'fileutils'
require 'shellwords'
require 'uri'
require 'net/http'

DISTS = %w!xenial bionic focal stretch buster centos7!

def run(*args)
  puts "> #{args}"
  unless system(*args)
    puts "#{args} failed."
    abort
  end
end

def bintray(url, path)
  http = Net::HTTP.new(url.host, url.port)
  http.use_ssl = url.scheme == 'https'
  http.start do
    print "* #{path} => #{url.path} ... "
    File.open(path, 'r') do |io|
      req = Net::HTTP::Put.new(url)
      req.basic_auth(ENV.fetch('BINTRAY_USERNAME'), ENV.fetch('BINTRAY_API_KEY'))

      req['Content-Type'] = 'application/vnd.debian.binary-package'
      #req['X-GPG-PASSPHRASE'] = config['bintray_gpg_key_passphrase']
      req['Transfer-Encoding'] = 'chunked'
      req.body_stream = io
      http.request(req)
    end
    puts "done"
  end
end

def sudo(arg)
  if ENV["DOCKER_WITH_SUDO"]
    arg = arg.is_a?(Array) ? ['sudo', *arg] : "sudo #{arg}"
  end

  arg
end

def build(dist)
  run(sudo("docker build -t omnibus-itamae-builder:#{dist} -f dockerfiles/#{dist} ."))

  user = `id -u`.chomp
  run(*sudo([*%w(docker run --rm -v), "#{File.join(Dir.pwd, 'pkg')}:/work/pkg", "omnibus-itamae-builder:#{dist}", 'bash', '-xe', '-c', "bundle exec omnibus build itamae && chown -R #{user}:#{user} /work/pkg"]))
end

def release(dist)
  Dir['pkg/*.deb'].each do |f|
    release_deb(f, dist)
  end

  Dir['pkg/*.rpm'].each do |f|
    release_rpm(f, dist)
  end
end

def release_deb(path, dist)
  basename = File.basename(path)
  match = basename.match(/\A([^_]+)_([^_]+)_([^\.]+)\.deb\z/)
  name = match[1]
  version = match[2]
  arch = match[3]

  basename.sub!(/\.deb\z/, "_#{dist}.deb")

  url = URI("https://api.bintray.com/content/itamae/itamae/" \
            "#{URI.encode_www_form_component(name)}/" \
            "#{URI.encode_www_form_component(version)}/" \
            "#{URI.encode_www_form_component(dist)}/pool/contrib/#{name[0]}/#{URI.encode_www_form_component(basename)};" \
            "deb_distribution=#{URI.encode_www_form_component(dist)};" \
            "deb_architecture=#{URI.encode_www_form_component(arch)};" \
            "deb_component=contrib;" \
            "publish=1")

  bintray(url, path)

  FileUtils.mv(path, "#{path}.done")
end

def release_rpm(path, dist)
  basename = File.basename(path)
  match = basename.match(/\A([^-]+)-(.+)\.[^\.]+\.rpm\z/)
  version = match[2]

  url = URI("https://api.bintray.com/content/itamae/itamae-rpm/" \
            "itamae/" \
            "#{URI.encode_www_form_component(version)}/" \
            "#{URI.encode_www_form_component(basename)};" \
            "publish=1")

  bintray(url, path)

  FileUtils.mv(path, "#{path}.done")
end

dists = ARGV
dists = DISTS if dists.first == 'all'

Dir.chdir(File.expand_path('..', __dir__)) do
  dists.each do |dist|
    build(dist)
    release(dist)
  end
end

